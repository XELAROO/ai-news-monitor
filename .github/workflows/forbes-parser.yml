name: Forbes AI Parser

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'

permissions:
  contents: write

jobs:
  parse-news:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install Chrome and dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install selenium webdriver-manager
        
    - name: Show initial state
      run: |
        echo "=== INITIAL STATE ==="
        echo "Results files:"
        ls -la results/ 2>/dev/null || echo "No results directory"
        echo "News count:"
        cat news_count.txt 2>/dev/null || echo "No news_count.txt"
        
    - name: Run Forbes Parser
      id: parser
      run: |
        python forbes_github.py
        NEWS_COUNT=$(cat news_count.txt)
        echo "NEWS_COUNT=$NEWS_COUNT" >> $GITHUB_OUTPUT
        echo "News count: $NEWS_COUNT"
        
    - name: Show files after parsing
      run: |
        echo "=== AFTER PARSING ==="
        echo "Results directory:"
        ls -la results/ || echo "No results directory"
        echo "Newest result file:"
        ls -1t results/*.txt 2>/dev/null | head -1 | xargs -I {} echo "Latest: {}" || echo "No result files"
        echo "News count content:"
        cat news_count.txt || echo "No news_count.txt"
        echo "Last news content:"
        cat last_news.json || echo "No last_news.json"
        
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
    - name: Check for changes
      id: changes
      run: |
        git add -A
        git status
        if git diff --staged --quiet; then
          echo "HAS_CHANGES=false" >> $GITHUB_OUTPUT
          echo "‚ùå No changes to commit"
        else
          echo "HAS_CHANGES=true" >> $GITHUB_OUTPUT
          echo "‚úÖ Changes detected"
        fi
        
    - name: Commit and push results
      if: steps.changes.outputs.HAS_CHANGES == 'true'
      run: |
        git commit -m "ü§ñ Auto-update: ${{ steps.parser.outputs.NEWS_COUNT }} –Ω–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π Forbes AI"
        git push origin main
        
    - name: No changes to commit
      if: steps.changes.outputs.HAS_CHANGES == 'false'
      run: |
        echo "‚ùå No changes detected in working tree"
        echo "This means:"
        echo "1. Files were not created by the Python script, OR"
        echo "2. Files already exist with same content"
        echo "3. Files were created but git doesn't see them"
