import os
import requests
import sys

print("=" * 50)
print("üöÄ AI News Monitor –∑–∞–ø—É—â–µ–Ω!")
print("=" * 50)

# –ü–æ–ª—É—á–∞–µ–º –∫–ª—é—á–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
DEEPSEEK_API_KEY = os.getenv('DEEPSEEK_API_KEY')
TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN') 
TELEGRAM_CHANNEL_ID = os.getenv('TELEGRAM_CHANNEL_ID')

# –í—ã–≤–æ–¥–∏–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
print(f"DEEPSEEK_API_KEY: {'***—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω***' if DEEPSEEK_API_KEY else '‚ùå –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}")
print(f"TELEGRAM_BOT_TOKEN: {'***—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω***' if TELEGRAM_BOT_TOKEN else '‚ùå –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}")
print(f"TELEGRAM_CHANNEL_ID: {'***—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω***' if TELEGRAM_CHANNEL_ID else '‚ùå –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}")
print("-" * 50)

def send_to_telegram(message):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram"""
    try:
        url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
        payload = {
            "chat_id": TELEGRAM_CHANNEL_ID,
            "text": message,
            "parse_mode": "HTML"
        }
        
        response = requests.post(url, json=payload)
        if response.status_code == 200:
            print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ Telegram API: {response.status_code} - {response.text}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")
        return False

def deepseek_api_call(prompt):
    """–í—ã–∑–æ–≤ DeepSeek API"""
    try:
        url = "https://api.deepseek.com/v1/chat/completions"
        headers = {
            "Authorization": f"Bearer {DEEPSEEK_API_KEY}",
            "Content-Type": "application/json"
        }
        
        data = {
            "model": "deepseek-chat",
            "messages": [{"role": "user", "content": prompt}],
            "max_tokens": 1000,
            "temperature": 0.7
        }
        
        print("üîç –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ DeepSeek API...")
        response = requests.post(url, headers=headers, json=data)
        
        if response.status_code == 200:
            result = response.json()
            if 'choices' in result:
                content = result['choices'][0]['message']['content']
                print("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç DeepSeek –ø–æ–ª—É—á–µ–Ω!")
                return content
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç DeepSeek")
                return None
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ DeepSeek API: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–∑–æ–≤–∞ DeepSeek API: {e}")
        return None

def monitor_news():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    print("üì∞ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π...")
    
    # –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–º–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∞
    search_prompt = """
    –ù–∞–π–¥–∏ –æ–¥–Ω—É —Å–∞–º—É—é –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –Ω–æ–≤–æ—Å—Ç—å –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞ –≤ —Å—Ñ–µ—Ä–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞.
    –í–µ—Ä–Ω–∏ –∫—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
    
    üöÄ –ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–æ–≤–æ—Å—Ç–∏
    üìù –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
    üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫
    üîñ –•–µ—à—Ç–µ–≥–∏: #AI #–ò–ò #–ù–æ–≤–æ—Å—Ç–∏
    """
    
    response = deepseek_api_call(search_prompt)
    
    if response:
        print("‚úÖ –ù–æ–≤–æ—Å—Ç—å –Ω–∞–π–¥–µ–Ω–∞!")
        print("=" * 50)
        print(response)
        print("=" * 50)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
        telegram_message = f"""
ü§ñ <b>–¢–µ—Å—Ç–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å –æ—Ç AI Monitor</b>

{response}

<b>‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!</b>
        """
        
        if send_to_telegram(telegram_message):
            print("üéâ –ù–æ–≤–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞!")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å –≤ Telegram")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –æ—Ç DeepSeek")

def publish_news():
    """–§—É–Ω–∫—Ü–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")
    
    test_message = """
ü§ñ <b>AI News Monitor - –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>

‚úÖ –°–∏—Å—Ç–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!

üéØ <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã:</b>
‚Ä¢ 07:00 - –ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π
‚Ä¢ 09:00, 12:00, 15:00, 18:00, 21:00 - –ü—É–±–ª–∏–∫–∞—Ü–∏—è

üîç <b>–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º:</b> Google, Microsoft, OpenAI, DeepSeek

üîñ #AI #–ò–ò #–ù–æ–≤–æ—Å—Ç–∏ #–¢–µ—Å—Ç #–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è
    """
    
    if send_to_telegram(test_message):
        print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    if not DEEPSEEK_API_KEY:
        print("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: DEEPSEEK_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("üí° –†–µ—à–µ–Ω–∏–µ: –î–æ–±–∞–≤—å—Ç–µ DEEPSEEK_API_KEY –≤ Secrets GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è")
        print("   Settings ‚Üí Secrets and variables ‚Üí Actions ‚Üí New repository secret")
        sys.exit(1)
        
    if not TELEGRAM_BOT_TOKEN:
        print("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")
        sys.exit(1)
        
    if not TELEGRAM_CHANNEL_ID:
        print("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: TELEGRAM_CHANNEL_ID –Ω–µ –Ω–∞–π–¥–µ–Ω")
        sys.exit(1)

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
    if len(sys.argv) > 1 and sys.argv[1] == "publish":
        publish_news()
    else:
        monitor_news()
    
    print("=" * 50)
    print("üèÅ –†–∞–±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("=" * 50)
